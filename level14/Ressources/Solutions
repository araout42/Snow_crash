For this one after after finding 0 executable with shared uid from flag14
no running process in ps -aux | grep flag14

and since its the last level it is 'obvious' we need to reverse /bin/getflag

$ strings /bin/getflag
strdup
stdout
fputc
fputs
getenv
stderr
getuid
ptrace
fwrite
open

here we note ptrace that can detect previous ptrace call from gdb (that was long)
also getuid 
and open ? fwrite ?
and we also have these strings

You should not reverse this
Injection Linked lib detected exit..
Check flag.Here is your token :
You are root are you that dumb ?
I`fA>_88eEd:=`85h0D8HE>,D
7`4Ci4=^d=J,?>i;6,7d416,7
<>B16\AD<C6,G_<1>^7ci>l4B
B8b:6,3fj7:,;bh>D@>8i:6@D
?4d@:,C>8C60G>8:h:Gb4?l,A
G8H.6,=4k5J0<cd/D@>>B:>:4
H8B8h_20B4J43><8>\ED<;j@3
78H:J4<4<9i_I4k0J^5>B1j`9
bci`mC{)jxkn<"uD~6%g7FK`7
Dc6m~;}f8Cj#xFkel;#&ycfbK
74H9D^3ed7k05445J0E4e;Da4
70hCi,E44Df[A4B/J@3f<=:`D
8_Dw"4#?+3i]q&;p6 gtw88EC
boe]!ai0FB@.:|L6l@A?>qJ}I
g <t61:|4_|!@IF.-62FH&G~DCK/Ekrvvdwz?v|
Nope there is no token here for you sorry. Try again :)


now gdb

$ gdb /bin/getflag

(gdb) disas main
...
0x08048989 <+67>:    call   0x8048540 <ptrace@plt>
0x0804898e <+72>:    test   %eax,%eax   FIRST BREAKPOINT
0x08048990 <+74>:    jns    0x80489a8 <main+98>
...

first breakpoin

(gdb) b *0x0804898e
Breakpoint 1 at 0x804898e
(gdb)r
Breakpoint 1, 0x0804898e in main ()
(gdb) p $eax
$1 = -1
(gdb) set $eax=1
(gdb) stepi
0x08048990 in main ()



Here we changed the value of eax to pass the test and jump at main<+98>
if we let ptrace function set $eax to -1 the program would print  "You should not reverse this and exit
" (it took a long time)


(gdb) disas 
   0x080489a3 <+93>:    jmp    0x8048eb2 <main+1388>
=> 0x080489a8 <+98>:    movl   $0x8048fc4,(%esp)
   0x080489af <+105>:   call   0x80484d0 <getenv@plt>
   0x080489b4 <+110>:   test   %eax,%eax

we are just before call to getenv, we will set a breakpoint at getuid

(gdb) b getuid
(gdb) n
(gdp) disas

=> 0xb7ee4cc0 <+0>:     mov    $0xc7,%eax
   0xb7ee4cc5 <+5>:     call   *%gs:0x10
   0xb7ee4ccc <+12>:    ret					THIS LINE RETURN OUR uid


so here we have to modify the return value
i didnt checked uids before, i noticed i was level14 and uid=2014, i connected to level13
and i was uid=2013, i connected to flag00 i figured uid=3000 so i assumed flag14 uid=3014 and tryed


(gdb) b *0xb7ee4ccc
(gdb) n
Breakpoint 3, 0xb7ee4ccc in getuid () from /lib/i386-linux-gnu/libc.so.6
(gdb) p $eax
$1 = 2014
(gdb) set $eax=3014
(gdb) n
...
(gdb) n
Single stepping until exit from function main,
which has no line number information.
Check flag.Here is your token : 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ
0xb7e454d3 in __libc_start_main () from /lib/i386-linux-gnu/libc.so.6


Check flag.Here is your token : 7QiHafiNa3HVozsaXkawuYrTstxbpABHD8CPnHJ

boom we have the flag

here we set the register eax  from 2014 to 3014 at the return instruction of the function getuid()

if we look closer at the instrucions after getuid call

 0x08048afd <+439>:   call   0x80484b0 <getuid@plt>
=> 0x08048b02 <+444>:   mov    %eax,0x18(%esp)
   0x08048b06 <+448>:   mov    0x18(%esp),%eax
   0x08048b0a <+452>:   cmp    $0xbbe,%eax
   0x08048b0f <+457>:   je     0x8048ccb <main+901> ###
   0x08048b15 <+463>:   cmp    $0xbbe,%eax			###
   0x08048b1a <+468>:   ja     0x8048b68 <main+546> ###
   0x08048b1c <+470>:   cmp    $0xbba,%eax			###
   0x08048b21 <+475>:   je     0x8048c3b <main+757> ###
   0x08048b27 <+481>:   cmp    $0xbba,%eax			###
   0x08048b2c <+486>:   ja     0x8048b4d <main+519> ###
   0x08048b2e <+488>:   cmp    $0xbb8,%eax			###
   0x08048b33 <+493>:   je     0x8048bf3 <main+685> ###

the lines with "###" are a bunch of compare $eax and jump

let's see the values held into 0xbbe 0xbba 0xbb8..
(gdb) p 0xbb8
$28 = 3000
(gdb) p 0xbb9
$29 = 3001
(gdb) p 0xbba
$30 = 3002
...
...
(gdb) p 0xbc6
$31 = 3014

i would not be surprised to see us go through a cmp $0xbc6, $eax

quick look and here it is

   0x08048bab <+613>:   cmp    $0xbc5,%eax
   0x08048bb0 <+618>:   je     0x8048dc4 <main+1150>
   0x08048bb6 <+624>:   cmp    $0xbc6,%eax				### if this is true program print flag14 flag and exit
   0x08048bbb <+629>:   je     0x8048de5 <main+1183>


Thank you :) 


